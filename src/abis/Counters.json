{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, 'increment' can skip the safemath overflow check, thereby saving gas. This does assume correct usage, in that the underlying '_value' is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/libraries/Counters.sol\":{\"keccak256\":\"0x983e706e9e5925b1ff0f3407dcf6de8c4487673a02b6b13f1b0a928fc9762726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52036918ce14f67301784516c252e099faa8a621c4a4713293dc6a85f44f3007\",\"dweb:/ipfs/QmPzjJeScsRVaKTww5g1vnZzAzo2H6jhQgMtTXBmUtNyWR\"]},\"project:/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xfe220632c6b35e70ffc2c319da157206d3681c01168dee332f34cf5b898d40f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de9501c05165b141bc6e4940fdebc8c51c5a889618bf0a1a9cedd0ec9c7da31a\",\"dweb:/ipfs/QmSGSi5zdqVK1eJJSCC1DJud97GP8zJondZMMYiz1ghNM4\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082a4252bc53d857f79eeb9d3366439787275b6504befa010867b998fb1cf863564736f6c63430008090033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082a4252bc53d857f79eeb9d3366439787275b6504befa010867b998fb1cf863564736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "650:630:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "650:630:10:-:0;;;;;;;;",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport './SafeMath.sol';\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, 'increment' can skip\n * the safemath overflow check, thereby saving gas. This does assume correct usage, in that the underlying\n * '_value' is never directly accessed.\n *\n *\n */\n\n library Counters {\n    using SafeMath for uint256;\n\n    //build your own variable type with the keyword 'struct'\n    // is a mechanism to keep track of our values of arithmetic changes to our code\n    struct Counter {\n        uint256 _value;\n    }\n\n    // we want to find the current value of a count\n    function current(Counter storage counter) internal view returns(uint256){\n        return counter._value;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n\n    function increment(Counter storage counter) internal {\n        counter._value += 1;\n    }\n\n\n\n }",
  "sourcePath": "/Users/joshua.stewart/Desktop/js.code/nft-marketplace-starter-kit/src/contracts/libraries/Counters.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        789
      ],
      "SafeMath": [
        985
      ]
    },
    "id": 790,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 738,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:10"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 790,
        "sourceUnit": 986,
        "src": "55:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 740,
          "nodeType": "StructuredDocumentation",
          "src": "80:567:10",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, 'increment' can skip\n the safemath overflow check, thereby saving gas. This does assume correct usage, in that the underlying\n '_value' is never directly accessed."
        },
        "fullyImplemented": true,
        "id": 789,
        "linearizedBaseContracts": [
          789
        ],
        "name": "Counters",
        "nameLocation": "658:8:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 743,
            "libraryName": {
              "id": 741,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 985,
              "src": "679:8:10"
            },
            "nodeType": "UsingForDirective",
            "src": "673:27:10",
            "typeName": {
              "id": 742,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "692:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 746,
            "members": [
              {
                "constant": false,
                "id": 745,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "884:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 746,
                "src": "876:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 744,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "876:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "858:7:10",
            "nodeType": "StructDefinition",
            "scope": 789,
            "src": "851:46:10",
            "visibility": "public"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "1027:38:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 754,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "1044:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 745,
                    "src": "1044:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 753,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "1037:21:10"
                }
              ]
            },
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "964:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "988:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "972:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 748,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 747,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "972:7:10"
                    },
                    "referencedDeclaration": 746,
                    "src": "972:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:25:10"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1019:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:9:10"
            },
            "scope": 789,
            "src": "955:110:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "1124:55:10",
              "statements": [
                {
                  "expression": {
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 764,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "1134:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 745,
                      "src": "1134:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1170:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 767,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "1151:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 745,
                          "src": "1151:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 835,
                        "src": "1151:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1151:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1134:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:38:10"
                }
              ]
            },
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1080:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1106:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "1090:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 759,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "1090:7:10"
                    },
                    "referencedDeclaration": 746,
                    "src": "1090:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:25:10"
            },
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:10"
            },
            "scope": 789,
            "src": "1071:108:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "1238:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 781,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "1248:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 745,
                      "src": "1248:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1266:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1248:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:19:10"
                }
              ]
            },
            "id": 788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1194:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1220:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "1204:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 777,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 776,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "1204:7:10"
                    },
                    "referencedDeclaration": 746,
                    "src": "1204:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:25:10"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:0:10"
            },
            "scope": 789,
            "src": "1185:89:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 790,
        "src": "650:630:10",
        "usedErrors": []
      }
    ],
    "src": "31:1249:10"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        789
      ],
      "SafeMath": [
        985
      ]
    },
    "id": 790,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 738,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:10"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 790,
        "sourceUnit": 986,
        "src": "55:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 740,
          "nodeType": "StructuredDocumentation",
          "src": "80:567:10",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, 'increment' can skip\n the safemath overflow check, thereby saving gas. This does assume correct usage, in that the underlying\n '_value' is never directly accessed."
        },
        "fullyImplemented": true,
        "id": 789,
        "linearizedBaseContracts": [
          789
        ],
        "name": "Counters",
        "nameLocation": "658:8:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 743,
            "libraryName": {
              "id": 741,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 985,
              "src": "679:8:10"
            },
            "nodeType": "UsingForDirective",
            "src": "673:27:10",
            "typeName": {
              "id": 742,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "692:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 746,
            "members": [
              {
                "constant": false,
                "id": 745,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "884:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 746,
                "src": "876:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 744,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "876:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "858:7:10",
            "nodeType": "StructDefinition",
            "scope": 789,
            "src": "851:46:10",
            "visibility": "public"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "1027:38:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 754,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "1044:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 745,
                    "src": "1044:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 753,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "1037:21:10"
                }
              ]
            },
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "964:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "988:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "972:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 748,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 747,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "972:7:10"
                    },
                    "referencedDeclaration": 746,
                    "src": "972:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:25:10"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1019:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:9:10"
            },
            "scope": 789,
            "src": "955:110:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "1124:55:10",
              "statements": [
                {
                  "expression": {
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 764,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "1134:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 745,
                      "src": "1134:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1170:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 767,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "1151:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 745,
                          "src": "1151:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 835,
                        "src": "1151:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1151:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1134:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:38:10"
                }
              ]
            },
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1080:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1106:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "1090:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 759,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "1090:7:10"
                    },
                    "referencedDeclaration": 746,
                    "src": "1090:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:25:10"
            },
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:10"
            },
            "scope": 789,
            "src": "1071:108:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "1238:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 781,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "1248:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 745,
                      "src": "1248:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1266:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1248:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:19:10"
                }
              ]
            },
            "id": 788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1194:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1220:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "1204:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 777,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 776,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "1204:7:10"
                    },
                    "referencedDeclaration": 746,
                    "src": "1204:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:25:10"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:0:10"
            },
            "scope": 789,
            "src": "1185:89:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 790,
        "src": "650:630:10",
        "usedErrors": []
      }
    ],
    "src": "31:1249:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-31T23:24:06.066Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, 'increment' can skip the safemath overflow check, thereby saving gas. This does assume correct usage, in that the underlying '_value' is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}